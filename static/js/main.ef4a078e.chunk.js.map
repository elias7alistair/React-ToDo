{"version":3,"sources":["components/holder.jpg","components/AddCards.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","AddCard","state","taskName","description","updateChange","event","setState","target","name","value","handleChange2","e","which","handleChange","descriptionInput","current","blur","list","props","obj","id","length","console","log","taskDone","addCard","handleKeyPress","focus","React","createRef","className","htmlFor","type","onChange","this","placeholder","onKeyPress","ref","onClick","Component","DisplayCard","deleteCard","cardStrike","Card","style","width","Img","variant","src","holder","Body","Title","textDecoration","Text","Button","CardList","updateID","map","data","i","key","Scroll","overflow","border","height","children","SearchBox","searchChange","align","App","searchfield","findIndex","list1","filter","objCopy","push","onSearchChange","filterList","toLowerCase","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef4a078e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/holder.90d8040b.jpg\";","import React, { Component } from \"react\";\r\nimport \"./AddCard.css\";\r\n\r\nclass AddCard extends Component {\r\n  \r\n  constructor(){\r\n    super();\r\n    this.descriptionInput = React.createRef();\r\n  }\r\n  \r\n  state = {\r\n    taskName: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  updateChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    // console.log(this.state.name + \" \" + this.state.description);\r\n  };\r\n\r\n  handleChange2 = (e) => {\r\n    if(e.which === 13){\r\n      this.handleChange();\r\n      this.descriptionInput.current.blur();\r\n    }\r\n    \r\n  }\r\n\r\n  handleChange = (e) => {\r\n   \r\n\r\n    var list = this.props.list;\r\n    var obj = {};\r\n    obj.id = list.length < 1 ? 0 : list.length === 1 ? 1 : list.length;\r\n    console.log(obj.id);\r\n    obj.taskName = this.state.taskName;\r\n    obj.description = this.state.description;\r\n    obj.taskDone = false;\r\n    this.props.addCard(obj);\r\n    obj = {};\r\n    this.setState({ taskName: \"\", description: \"\" });\r\n  };\r\n\r\n  handleKeyPress= (event)=> {\r\n  //  return event.key === 'enter' && console.log(\"enter oress\");\r\n  \r\n  if( event.which === 13)\r\n  this.descriptionInput.current.focus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AddCard\">\r\n        <div>\r\n          <div className=\"AddCardContainer\">\r\n            <label htmlFor=\"name\">Task Name</label>\r\n            <input\r\n              name=\"taskName\"\r\n              type=\"text\"\r\n              onChange={this.updateChange}\r\n              placeholder=\"Task Name\"\r\n              id=\"name\"\r\n              value={this.state.taskName}\r\n              onKeyPress={this.handleKeyPress}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"AddCardContainer\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <textarea\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={this.updateChange}\r\n              placeholder=\"description\"\r\n              value={this.state.description}\r\n              ref={this.descriptionInput}\r\n              onKeyPress={this.handleChange2}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"btn btnAdd\" onClick={this.handleChange}>Add Card</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddCard;\r\n","import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport \"./Card.css\";\r\nimport holder from \"./holder.jpg\";\r\n\r\nconst DisplayCard = ({ id, name, description,taskDone, deleteCard,cardStrike }) => {\r\n  \r\n  return (\r\n    <div className=\"cardAlign col-sm-4\">\r\n    \r\n      <Card className=\"displayCard\" style={{ width: \"18rem\" }}>\r\n        <Card.Img variant=\"top\" src={holder} />\r\n        <Card.Body>\r\n          <Card.Title style={{ textDecoration: taskDone ? \"line-through\" : \"none\"}}>{name}</Card.Title>\r\n          <Card.Text>{description}</Card.Text>\r\n          <Button className=\"btn\" onClick={()=>{ cardStrike(id)}} >{!taskDone ?\"Done\" : \"undone\"}</Button>\r\n          <Button className=\"btn\" id={id} onClick={()=>{ deleteCard(id)}}  variant=\"primary\">Delete</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayCard;\r\n","import React from 'react';\r\nimport DisplayCard from './Card';\r\nimport './CardList.css';\r\n\r\n\r\nconst CardList = ({list,deleteCard,cardStrike,updateID}) =>{\r\n\r\n   \r\n    \r\n    return (\r\n        <div className=\"container\" >\r\n           \r\n            <div className=\"row align-items-center no-gutters\" >{\r\n            \r\n                    list.map((data,i) => {\r\n        \r\n                    // console.log(data.id);\r\n                        return <DisplayCard key={i} id={i} name={data.taskName} description={data.description} taskDone={data.taskDone} deleteCard={deleteCard} cardStrike={cardStrike} />\r\n                })   \r\n               \r\n             \r\n               \r\n                }\r\n\r\n            </div>     \r\n\r\n            \r\n              \r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default CardList;","\r\nimport React from 'react';\r\n\r\nconst Scroll=(props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll',border: '5px solid black', height: '800px'}}>\r\n          { props.children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\r\n    return(\r\n\r\n        <div className=\"searchBox\">\r\n          <h2 align=\"center\">Task List</h2>\r\n          <input onChange={searchChange} type=\"text\"  placeholder=\"search here \"/>\r\n         \r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from \"react\";\nimport AddCard from \"../components/AddCards\";\nimport CardList from \"../components/CardList\";\nimport Scroll from \"../components/Scroll\";\nimport SearchBox from \"../components/SearchBox\"\n\n\nclass App extends Component {\n  state = {\n    list: [\n      { id: 0, taskName: \"getup\", description: \"sfadh asfd\", taskDone: false },\n      { id: 1, taskName: \"brush\", description: \"sfadh asfd\", taskDone: false },\n      {\n        id: 2,\n        taskName: \"drink water\",\n        description: \"sfadh asfd\",\n        taskDone: true,\n      },\n    ],\n    searchfield : ''\n  };\n\n  updateID = (list) => {\n    // const list1 = [...this.state.list];\n    list.map((data) => {\n      return (data.id = list.findIndex(\n        (list) => list.taskName === data.taskName\n      ));\n    });\n    this.setState({ list: list });\n    console.log(this.state.list1);\n  };\n\n  deleteCard = (id) => {\n    console.log(id);\n    const list = this.state.list.filter((list) => list.id !== id);\n    // this.setState({list});\n    this.updateID(list);\n    console.log(list);\n  };\n\n  addCard = (list) => {\n    const objCopy = [...this.state.list];\n    objCopy.push(list);\n    console.log(objCopy);\n    list.taskName.length > 0 && this.setState({ list: objCopy });\n  };\n\n  cardStrike = (id) => {\n    const list = [...this.state.list];\n\n    list[id].taskDone = list[id].taskDone ? false : true;\n\n    this.setState({ list });\n  };\n\n  onSearchChange = (event) => {\n\n    this.setState({searchfield: event.target.value});\n\n  }\n  \n\n  render() {\n\n    const {list, searchfield} = this.state;\n    const filterList = list.filter(list => { \n      return list.taskName.toLowerCase().includes(searchfield.toLowerCase())\n    })\n\n\n    return (\n      <div className=\"App\">\n        <h1 align=\"center\">Alistair's Todo List</h1>\n        <AddCard addCard={this.addCard} list={this.state.list} />\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          {\" \"}\n          <CardList\n            deleteCard={this.deleteCard}\n            cardStrike={this.cardStrike}\n            list={filterList}\n          />\n        </Scroll>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}